// Map data from an original table to a new scale

const { round, interpolate2D } = require('../scripts/common')

// Original table
const xScale = [
  500,
  1000,
  1500,
  2000,
  2500,
  3000,
  3500,
  4000,
  4500,
  5000,
  5500,
  6000,
  6550,
  7000,
  7500,
  8000,
  8500,
  9000,
  9500,
  10000,
  10500
]

const yScale = [
  -13.8999719619751
  -12.7357206344604,
  -11.5714702606201,
  -10.4072189331055,
  -9.24296760559082,
  -8.07871723175049,
  -6.91446542739868,
  -5.84723567962646,
  -4.68298482894897,
  -3.51873373985291,
  -2.35448241233826,
  -1.1902312040329,
  -0.0259800497442484,
  1.52635419368744,
  3.9518780708313,
  6.95952606201172,
  9.96717357635498,
]

// Array of rows, table[y][x] to get value
const table = [
  [15, 15, 15, 15, 20.4, 25.7, 36.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5],
  [15, 15, 15, 15, 20.4, 25.7, 36.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5],
  [15, 15, 15, 15, 19.3, 24.2, 33.8, 37.8, 38, 38.1, 38.2, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3],
  [15, 15, 15, 15, 19.3, 24.2, 33.8, 37.8, 38, 38.1, 38.2, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3, 38.3],
  [15, 15, 15, 15, 18.1, 22.8, 31.1, 35.1, 35.5, 35.8, 35.9, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1],
  [15, 15, 15, 15, 18.1, 22.8, 31.1, 35.1, 35.5, 35.8, 35.9, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1, 36.1],
  [15, 15, 15, 15, 17, 21.3, 28.5, 32.5, 33.1, 33.5, 33.5, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34],
  [15, 15, 15, 15, 17, 21.3, 28.5, 32.5, 33.1, 33.5, 33.5, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34],
  [7, 7, 9, 12, 15.9, 19.9, 25.8, 29.8, 30.6, 31.1, 31.2, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8],
  [7, 7, 9, 12, 15.9, 19.9, 25.8, 29.8, 30.6, 31.1, 31.2, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8, 31.8],
  [-3.4, -3.4, -1.2, 3, 9.4, 15.9, 19.9, 26.3, 27.3, 28, 28.2, 28.8, 29, 29.4, 29.7, 29.9, 30.1, 30.3, 30.3, 30.3, 30.3],
  [-4.4, -4.4, -2.1, 1.9, 8.1, 14.1, 18.1, 23.8, 24.9, 25.7, 26, 26.7, 27, 27.5, 27.9, 28.2, 28.5, 28.9, 29, 29.1, 29.1],
  [-6.1, -6.1, -3.6, -0.1, 6, 11.1, 15, 19.6, 20.9, 21.9, 22.4, 23.2, 23.7, 24.3, 24.9, 25.4, 25.9, 26.4, 26.9, 27.4, 27.4],
  [-7.9, -7.9, -5.2, -2.2, 3.6, 7.8, 11.5, 14.8, 16.3, 17.6, 18.4, 19.2, 19.9, 20.7, 21.5, 22.2, 22.9, 23.7, 24.5, 25.3, 25.3],
  [-9.5, -9.4, -6.7, -3.9, 1.7, 5.3, 8.7, 11.2, 12.3, 13.3, 14.3, 15.3, 16.3, 17.2, 18.2, 19.2, 20.1, 21.1, 22, 22.9, 22.9],
  [-11.3, -11.2, -8.3, -5.3, 0.1, 3.6, 6.6, 8.8, 9.4, 9.9, 11, 12, 13.1, 14.1, 15.2, 16.3, 17.3, 18.4, 19.4, 20.4, 20.4],
  [-11.3, -11.2, -8.3, -5.3, 0.1, 3.6, 6.6, 8.8, 9.4, 9.9, 11, 12, 13.1, 14.1, 15.2, 16.3, 17.3, 18.4, 19.4, 20.4, 20.4],
]


// New scale

const newXScale = [
  0, 500, 750, 1000, 1250, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500
]
const newYScale = [-14.5, -11.6, -8.7, -5.8, -2.9, 0, 1.5, 4, 7, 10, 13]

function printLine (values) {
  console.log(values.join('\t'))
}

printLine(['.',...newXScale])
const newTable = []
for (const y of newYScale) {
  const newRow = []
  for (const x of newXScale) {
    newRow.push(round(interpolate2D (x, y, {
      xScale,
      yScale,
      values: table
    }), 2))
  }
  printLine([y,...newRow])

  newTable.push(newRow)
}

console.log(newTable)
